birdeye_api_key = "YOUR_BIRDEYE_KEY"
solana_rpc_url = "https://api.mainnet-beta.solana.com"
dex_base_url = "https://dex.example/api"
dex_testnet_url = "https://dex.testnet/api"
orca_api_url = "https://api.orca.so"
raydium_api_url = "https://api.raydium.io"
orca_ws_url = ""
raydium_ws_url = ""
jupiter_ws_url = ""
order_book_ws_url = ""
orca_dex_url = "https://dex.orca.so"
raydium_dex_url = "https://dex.raydium.io"
metrics_base_url = "https://api.example.com"
news_feeds = "https://news.example.com/rss"
dex_listing_ws_url = "wss://dex.example/ws"
discovery_method = "websocket"
# Sell thresholds
stop_loss = 0.1
take_profit = 0.2
# Adjust weights based on agent success
dynamic_weights = true
# Amount to add or subtract from an agent's weight after each cycle
weight_step = 0.05
strategy_selection = true
vote_threshold = 0.1
risk_tolerance = 0.1
max_allocation = 0.2
risk_multiplier = 1.0
max_risk_per_token = 0.05
trailing_stop = 0.1
max_drawdown = 0.5
volatility_factor = 1.0
min_delay = 10
max_delay = 300
offline_data_limit_gb = 50
min_portfolio_value = 20.0
arbitrage_threshold = 0.0
arbitrage_amount = 0.0
dex_priorities = "orca,raydium,jupiter"
dex_fees = "{}"
dex_gas = "{}"
dex_latency = "{}"
priority_fees = "0,1,2"
priority_rpc = "https://rpc.example"
weights_path = "weights.json"

token_suffix = "bonk"
token_keywords = ""
volume_threshold = 0
trend_volume_threshold = 0
trend_sentiment_threshold = 0.0

# Enable built-in agents for trading
agents = ["simulation", "conviction", "arbitrage", "exit", "trend"]

[agent_weights]
simulation = 1.0
conviction = 1.0
arbitrage = 1.0
exit = 1.0
trend = 1.0
