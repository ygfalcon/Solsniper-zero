import json
from solders.keypair import Keypair

# Older versions of ``solders`` do not expose ``to_bytes`` which our tests rely
# on. Provide a backwards compatible shim.
if not hasattr(Keypair, "to_bytes"):
    def _to_bytes(self) -> bytes:  # pragma: no cover - shim for old versions
        return bytes(self.to_bytes_array())

    Keypair.to_bytes = _to_bytes  # type: ignore[attr-defined]


def load_keypair(path: str) -> Keypair:
    """Load a Solana ``Keypair`` from a JSON file generated by ``solana-keygen``.

    Parameters
    ----------
    path:
        Path to the keypair JSON file. It should contain an array of integers.
    """
    with open(path, "r") as f:
        data = json.load(f)
    if not isinstance(data, list):
        raise ValueError("Invalid keypair file")
    secret = bytes(data)
    return Keypair.from_bytes(secret)
